trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - name: resourceGroup
    value: Web3DevOps

stages:
  - stage: build
    jobs:
      - job: compile_test
        steps:
          - script: npm install
            displayName: "Install Truffle"
          - script: npx truffle compile
            displayName: "Compile contracts"
          - script: npx truffle test
            displayName: "Test contracts"
          - task: PublishTestResults@2
            displayName: "Publish contract test results"
            inputs:
              testRunTitle: "Contract"
              testResultsFormat: "JUnit"
              failTaskOnFailedTests: true
              testResultsFiles: "**/TEST-*.xml"
          - task: CopyFiles@2
            displayName: "Package tests"
            inputs:
              Contents: |
                $(System.DefaultWorkingDirectory)/test/**
                package.json
              TargetFolder: "$(Build.ArtifactStagingDirectory)/tests"
          - task: PublishPipelineArtifact@1
            displayName: "Publish contract tests"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/tests"
              artifact: "tests"
              publishLocation: "pipeline"
          - task: CopyFiles@2
            displayName: "Package contracts"
            inputs:
              Contents: |
                $(System.DefaultWorkingDirectory)/package.json
                $(System.DefaultWorkingDirectory)/migrations/**
                $(System.DefaultWorkingDirectory)/truffle-config.js
                $(System.DefaultWorkingDirectory)/client/src/contracts/**
              TargetFolder: "$(Build.ArtifactStagingDirectory)/contracts"
          - task: PublishPipelineArtifact@1
            displayName: "Publish contracts"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/contracts"
              artifact: "contracts"
              publishLocation: "pipeline"
          - script: npm install
            displayName: "Install client dependencies"
            workingDirectory: $(System.DefaultWorkingDirectory)/client
          - script: npm run build
            displayName: "Build client"
            workingDirectory: $(System.DefaultWorkingDirectory)/client
          - script: npm test -- --reporters=default --reporters=jest-junit
            displayName: "Test client"
            workingDirectory: $(System.DefaultWorkingDirectory)/client
            env:
              CI: true
          - task: PublishTestResults@2
            displayName: "Publish client test results"
            inputs:
              testRunTitle: "Client"
              testResultsFormat: "JUnit"
              failTaskOnFailedTests: true
              testResultsFiles: "client/junit*.xml"
          - task: PublishPipelineArtifact@1
            displayName: "Publish client"
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/client/build"
              artifact: "client"
              publishLocation: "pipeline"
          - task: PublishPipelineArtifact@1
            displayName: Publish API
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/api"
              artifact: "api"
              publishLocation: "pipeline"
          - script: npm install
            displayName: "Install API dependencies"
            workingDirectory: $(System.DefaultWorkingDirectory)/api
          - script: npm test -- --reporters=default --reporters=jest-junit
            displayName: "Test API"
            workingDirectory: $(System.DefaultWorkingDirectory)/api
            env:
              CI: true
              networkAddress_4: "0x7a063c7e4A0EC2fB4dC0F73103Fd45F17b46Ae52"
          - task: PublishTestResults@2
            displayName: "Publish API test results"
            inputs:
              testRunTitle: "API"
              testResultsFormat: "JUnit"
              failTaskOnFailedTests: true
              testResultsFiles: "api/junit*.xml"
          - task: CopyFiles@2
            displayName: "Package IaC"
            inputs:
              Contents: $(System.DefaultWorkingDirectory)/iac/**
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishPipelineArtifact@1
            displayName: "Publish IaC"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/iac"
              artifact: "iac"
              publishLocation: "pipeline"        
  - stage: dev
    dependsOn: build
    jobs:
      - job: iac
        steps:
          - checkout: none
          - download: none

          - task: DownloadPipelineArtifact@2
            displayName: "Download IaC artifacts"
            inputs:
              buildType: "current"
              artifact: "iac"
              targetPath: "$(Pipeline.Workspace)/iac"
          - task: AzureCLI@2
            name: "deploy"
            displayName: "Deploy Infra"
            inputs:
              azureSubscription: "Web3DevOps"
              scriptType: "pscore"
              scriptLocation: "scriptPath"
              scriptPath: "$(Agent.BuildDirectory)/iac/deploy.ps1"
              arguments: "-repoUrl $(Build.Repository.Uri) -rgName $(resourceGroup)-dev -fqdn $(resourceGroup)-dev -deployGanache -verbose"    
              workingDirectory: "$(Agent.BuildDirectory)/iac"
      - job: deploy_contracts
        dependsOn: iac
      - job: deploy_frontend
        dependsOn:
          - iac
          - deploy_contracts
  - stage: dev_validation
    dependsOn: dev
    jobs:
      - job: wait_for_dev_validation
      - job: delete_dev
        dependsOn: wait_for_dev_validation
  - stage: qa
    dependsOn: dev_validation
    jobs:
      - job: iac
      - job: deploy_contracts
        dependsOn: iac
      - job: deploy_frontend
        dependsOn:
          - iac
          - deploy_contracts
  - stage: qa_validation
    dependsOn: qa
    jobs:
      - job: wait_for_qa_validation
      - job: delete_qa
        dependsOn: wait_for_qa_validation
  - stage: prod
    dependsOn: qa_validation
    jobs:
      - job: iac
      - job: deploy_contracts
        dependsOn: iac
      - job: deploy_frontend
        dependsOn:
          - iac
          - deploy_contracts
